.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "NYTPROFHTML 1p"
.TH NYTPROFHTML 1p "2016-11-24" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
nytprofhtml \- Generate reports from Devel::NYTProf data
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Typical usage:
.PP
.Vb 2
\& $ perl \-d:NYTProf some_perl_app.pl
\& $ nytprofhtml \-\-open
.Ve
.PP
Options synopsis:
.PP
.Vb 1
\& $ nytprofhtml [\-h] [\-d] [\-m] [\-o <output directory>] [\-f <input file>] [\-\-open]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Devel::NYTProf is a powerful feature-rich Perl source code profiler.
See Devel::NYTProf for details.
.PP
\&\f(CW\*(C`nytprofhtml\*(C'\fR generates a set of html reports from a single data file
generated by Devel::NYTProf. (If your process forks you'll probably have
multiple files. See Devel::NYTProf and nytprofmerge.)
.PP
The reports include dynamic runtime analysis wherein each line and each file
is analyzed based on the performance of the other lines and files.  As a
result, you can quickly find the slowest module and the slowest line in a 
module.  Slowness is measured in three ways: total calls, total time, and
average time per call.
.PP
Coloring is based on absolute deviations from the median.
See <http://en.wikipedia.org/wiki/Median_absolute_deviation> for more details.
.PP
That might sound complicated, but in reality you can just run the command and
enjoy your report!
.SH "COMMAND-LINE OPTIONS"
.IX Header "COMMAND-LINE OPTIONS"
.IP "\-f, \-\-file <filename>" 4
.IX Item "-f, --file <filename>"
Specifies the location of the file generated by Devel::NYTProf.
Default: ./nytprof.out
.IP "\-o, \-\-out <dir>" 4
.IX Item "-o, --out <dir>"
The directory in which to place the generated report files. Default: ./nytprof/
.IP "\-d, \-\-delete" 4
.IX Item "-d, --delete"
Purge any existing contents of the report output directory.
.IP "\-l, \-\-lib <dir>" 4
.IX Item "-l, --lib <dir>"
Add a path to the beginning of \f(CW@INC\fR to help nytprofhtml find the source files
used by the code. Should not be needed in practice.
.IP "\-\-open" 4
.IX Item "--open"
Make your web browser visit the report after it has been generated.
.Sp
If this doesn't work well for you, try installing the Browser::Open module.
.IP "\-m, \-\-minimal" 4
.IX Item "-m, --minimal"
Don't generate graphviz .dot files or block/sub\-level reports.
.IP "\-\-no\-flame" 4
.IX Item "--no-flame"
Disable generation of the flamegraph on the index page.
Also disables calculation of distinct call stacks that are used to produce the
flamegraph.
.IP "\-h, \-\-help" 4
.IX Item "-h, --help"
Print the help message.
.SH "SAMPLE OUTPUT"
.IX Header "SAMPLE OUTPUT"
You can see a complete report for a large application at
<http://timbunce.github.io/devel\-nytprof/sample\-report/nytprof\-20160319/index.html>
.PP
The report was generated by profiling perlcritic 1.121 checking its own source code
using perl v5.18.2.
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.ie n .SS """Unable to open '... (autosplit into ...)'"""
.el .SS "``Unable to open '... (autosplit into ...)'''"
.IX Subsection "Unable to open '... (autosplit into ...)'"
The profiled application executed code in a module that used AutoLoader to
load the code from a separate .al file.  NYTProf automatically recognises this
situation and tries to determine the 'parent' module file so it can associate
the profile data with it.  In order to do that the parent module file must
already be 'known' to NYTProf, typically by already having some code profiled.
.PP
You're only likely to see this warning if you're using the \f(CW\*(C`start\*(C'\fR option to
start profiling after compile-time. The effect is that times spent in
autoloaded subs won't be associated with the parent module file and you won't
get annotated reports for them.
.PP
You can avoid this by using the default \f(CW\*(C`start=begin\*(C'\fR option, or by ensuring
you execute some non-autoloaded code in the parent module, while the profiler is
running, before an autoloaded sub is called.
.SS "Background"
.IX Subsection "Background"
Subroutine-level profilers:
.PP
.Vb 6
\&  Devel::DProf        | 1995\-10\-31 | ILYAZ
\&  Devel::AutoProfiler | 2002\-04\-07 | GSLONDON
\&  Devel::Profiler     | 2002\-05\-20 | SAMTREGAR
\&  Devel::Profile      | 2003\-04\-13 | JAW
\&  Devel::DProfLB      | 2006\-05\-11 | JAW
\&  Devel::WxProf       | 2008\-04\-14 | MKUTTER
.Ve
.PP
Statement-level profilers:
.PP
.Vb 4
\&  Devel::SmallProf    | 1997\-07\-30 | ASHTED
\&  Devel::FastProf     | 2005\-09\-20 | SALVA
\&  Devel::NYTProf      | 2008\-03\-04 | AKAPLAN
\&  Devel::Profit       | 2008\-05\-19 | LBROCARD
.Ve
.PP
Devel::NYTProf is a (now distant) fork of Devel::FastProf, which was itself an
evolution of Devel::SmallProf.
.PP
Adam Kaplan took Devel::FastProf and added html report generation (based on
Devel::Cover) and a test suite \- a tricky thing to do for a profiler.
Meanwhile Tim Bunce had been extending Devel::FastProf to add novel
per-sub and per-block timing, plus subroutine caller tracking.
.PP
When Devel::NYTProf was released Tim switched to working on Devel::NYTProf
because the html report would be a good way to show the extra profile data, and
the test suite made development much easier and safer.
.PP
Then he went a little crazy and added a slew of new features, in addition to
per-sub and per-block timing and subroutine caller tracking. These included the
\&'opcode interception' method of profiling, ultra-fast and robust inclusive
subroutine timing, doubling performance, plus major changes to html reporting
to display all the extra profile call and timing data in richly annotated and
cross-linked reports.
.PP
Steve Peters came on board along the way with patches for portability and to
keep NYTProf working with the latest development Perl versions.
.PP
Adam's work is sponsored by The New York Times Co. <http://open.nytimes.com>.
Tim's work was partly sponsored by Shopzilla. <http://www.shopzilla.com>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Mailing list and discussion at <http://groups.google.com/group/develnytprof\-dev>
.PP
Public \s-1SVN\s0 Repository and hacking instructions at <http://code.google.com/p/perl\-devel\-nytprof/>
.PP
Devel::NYTProf,
Devel::NYTProf::Reader,
nytprofcsv
.SH "AUTHOR"
.IX Header "AUTHOR"
\&\fBAdam Kaplan\fR, \f(CW\*(C`<akaplan at nytimes.com>\*(C'\fR.
\&\fBTim Bunce\fR, <http://www.tim.bunce.name> and <http://blog.timbunce.org>.
\&\fBSteve Peters\fR, \f(CW\*(C`<steve at fisharerojo.org>\*(C'\fR.
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.8 or,
at your option, any later version of Perl 5 you may have available.
